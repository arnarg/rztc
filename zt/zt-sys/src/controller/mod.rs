use super::*;

/* automatically generated by rust-bindgen 0.59.1 */

pub type __uint64_t = ::std::os::raw::c_ulong;
pub type RZTC_Controller = ::std::os::raw::c_void;
pub type RZTC_networkRequestCallback = ::std::option::Option<
    unsafe extern "C" fn(
        arg1: *mut RZTC_Controller,
        arg2: *mut ::std::os::raw::c_void,
        arg3: u64,
        arg4: *const libc::sockaddr_storage,
        arg5: u64,
        arg6: u64,
        arg7: *const ::std::os::raw::c_void,
        arg8: u64,
    ),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct RZTC_Controller_Callbacks {
    pub networkRequestCallback: RZTC_networkRequestCallback,
}
#[test]
fn bindgen_test_layout_RZTC_Controller_Callbacks() {
    assert_eq!(
        ::std::mem::size_of::<RZTC_Controller_Callbacks>(),
        8usize,
        concat!("Size of: ", stringify!(RZTC_Controller_Callbacks))
    );
    assert_eq!(
        ::std::mem::align_of::<RZTC_Controller_Callbacks>(),
        8usize,
        concat!("Alignment of ", stringify!(RZTC_Controller_Callbacks))
    );
    assert_eq!(
        unsafe {
            &(*(::std::ptr::null::<RZTC_Controller_Callbacks>())).networkRequestCallback as *const _
                as usize
        },
        0usize,
        concat!(
            "Offset of field: ",
            stringify!(RZTC_Controller_Callbacks),
            "::",
            stringify!(networkRequestCallback)
        )
    );
}
pub const RZTC_ResultCode_RZTC_RESULT_OK: RZTC_ResultCode = 0;
pub const RZTC_ResultCode_RZTC_RESULT_FATAL_ERROR_OUT_OF_MEMORY: RZTC_ResultCode = 100;
pub const RZTC_ResultCode_RZTC_RESULT_FATAL_ERROR_DATA_STORE_FAILED: RZTC_ResultCode = 101;
pub const RZTC_ResultCode_RZTC_RESULT_FATAL_ERROR_INTERNAL: RZTC_ResultCode = 102;
pub type RZTC_ResultCode = ::std::os::raw::c_uint;
extern "C" {
    pub fn RZTC_Controller_new(
        controller: *mut *mut RZTC_Controller,
        uptr: *mut ::std::os::raw::c_void,
        cbs: *const RZTC_Controller_Callbacks,
    ) -> RZTC_ResultCode;
}
extern "C" {
    pub fn RZTC_Controller_delete(controller: *mut RZTC_Controller);
}
extern "C" {
    pub fn RZTC_Controller_sendConfig(
        controller: *mut RZTC_Controller,
        nwid: u64,
        requestPacketId: u64,
        dest: u64,
        nc: *const ::std::os::raw::c_void,
        legacy: bool,
    );
}
